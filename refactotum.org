# Why making mistakes and doing things wrong will make you a better programmer.

* Trial and error is the only method of learning
** Think evolution

* Repitition and Meditation
** Reptition hones the body
** Meditation hones the mind
** But programming is all mind!
*** Conscious thought is no different than conscious action
**** Repetition elevates conscious thought above the minutae
**** Internalizing the simple things allows you to progress beyond
**** But it is possible, even likely, that you are on the wrong path
**** Meditation keeps you grounded.
***** Learn from your errors
***** It is a thousandfold more valuable to know why you are wrong then to know why you are right
****** (This is evidence that one should not criticize others' mistakes but rather understand them. 
******* Perhaps you are mistaken.
******* Or perhaps neither of you is.)

** Repitition is a means to follow the tangent
** Meditation allows you to cease your climb and fall back towards Truth

* Don't hesitate to throw it out!
** Don't feel attached to work you've already done.
** If you realize you can throw something out to get back on the right track DO IT!

* Don't throw it out without a reason
** If you're having trouble wrapping your head around somehting stick with your current idea
** Until you can see clearly why it's no good, it's the best you've got. Work with it.
** "Good enough is good enough."
   
# Leftovers?

* Follow that tangent!
** You may think I'm full of shit. Good!
*** But while you devise your brilliant rebuttal of why I have wasted your time with nonsense
*** And that nagging doubt that you're right enters your head.
**** Follow the doubt!
**** It will bring you right back where you started, but one flight higher on the spiral staircase
